---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: voter-ns
spec:
  ports:
  - port: 5432
  selector:
    app: postgresql
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: voter-ns
  name: postgresql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: voter-ns
type: Opaque
data:
  password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: voter-ns
  name: postgresql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE poll_result;
    \c poll_result;
    CREATE TABLE IF NOT EXISTS result
    (
        supermarket_id SERIAL,
        supermarket_name CHAR(30) NOT NULL,
        avg_price_score float,
        avg_service_score float,
        avg_overall_score float,
        count int,
        PRIMARY KEY (supermarket_id)
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: voter-ns
  name: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: voter-ns
      labels:
        app: postgresql
    spec:
      containers:
      - image: postgres:10.3
        name: postgresql
        env:
          # Use secret in real usage
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        ports:
        - containerPort: 3306
          name: postgresql
        volumeMounts:
        - name: postgresql-persistent-storage
          mountPath: /var/lib/mysql
        - name: postgresql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgresql-persistent-storage
        persistentVolumeClaim:
          claimName: postgresql-pv-claim
      - name: postgresql-initdb
        configMap:
          name: postgresql-initdb-config